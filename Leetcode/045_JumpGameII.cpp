/*###############################################################
## MODULE: 045_JumpGameII.cpp
## VERSION: 1.0 
## SINCE 2015-10-23
## AUTHOR Jimmy Lin (xl5224) - JimmyLin@utexas.edu  
## DESCRIPTION: 
##      
#################################################################
## Edited by MacVim
## Class Info auto-generated by Snippet 
################################################################*/

class Solution {
public:
    int jump(vector<int>& nums) {
        // assume that int type suffice to deal with the problem
        int n = nums.size();
        if (n <= 1) return 0;
        // check input 
        int max = 0, start = 0, end = 0, steps = 0;
        while (start < n and max < n-1) {
            for (int i = start; i <= end; i ++) 
                if (nums[i] + i > max) 
                    max = nums[i] + i; 
            start = end + 1;
            end = max;
            steps ++;
        }
        return steps;
    }
};
