/*###############################################################
## MODULE: 112_PathSum.cpp
## VERSION: 1.0 
## SINCE 2015-10-23
## AUTHOR Jimmy Lin (xl5224) - JimmyLin@utexas.edu  
## DESCRIPTION: 
##      
#################################################################
## Edited by MacVim
## Class Info auto-generated by Snippet 
################################################################*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isRoot = true;
    bool hasPathSum(TreeNode* root, int sum) {
        if (isRoot and root == NULL) return false;
        isRoot = false;
        if (root == NULL) return false;
        else { 
            if (root->left == NULL and root->right == NULL) 
                return root->val == sum;
            bool left = false, right = false;
            if (root->left != NULL) 
                left = hasPathSum(root->left, sum- (root->val));
            if (root->right != NULL)
                right = hasPathSum(root->right, sum- (root->val));
            return left or right;
        }
    }
};
