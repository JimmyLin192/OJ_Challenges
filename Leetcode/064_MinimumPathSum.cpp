/*###############################################################
## MODULE: 064_MinimumPathSum.cpp
## VERSION: 1.0 
## SINCE 2015-10-23
## AUTHOR Jimmy Lin (xl5224) - JimmyLin@utexas.edu  
## DESCRIPTION: 
##      
#################################################################
## Edited by MacVim
## Class Info auto-generated by Snippet 
################################################################*/

class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int m = grid.size(); 
        if (m == 0) return 0; 
        int n = grid[0].size();
        if (n == 0) return 0; 
        vector<vector<int>> score (m, vector<int>(n, 0)); 
        for (int i = 0; i < m; i ++) {
            for (int j = 0; j < n; j ++) {
                if (i == 0 and j == 0) 
                    score[i][j] = grid[i][j];
                else if (i == 0)
                    score[i][j] = score[i][j-1]+ grid[i][j];
                else if (j == 0)
                    score[i][j] = score[i-1][j]+ grid[i][j];
                else {
                    int from_left = score[i][j-1] + grid[i][j];
                    int from_top = score[i-1][j] + grid[i][j];
                    score[i][j] = min(from_left, from_top);
                }
            }
        }
        return score[m-1][n-1];
    }
};
